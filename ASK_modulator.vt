// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "04/20/2024 06:47:33"
                                                                                
// Verilog Test Bench template for design : ASK_modulator
// 
// Simulation tool : ModelSim (Verilog)
// 

`timescale 1 ns/ 1 ps
module ASK_modulator_tb();
reg button0;
reg button1;
reg clk;
reg rst;
// wires                                               
wire clk_dac;
wire [7:0]  data_out;

                        
ASK_modulator i1 (
 
	.button0(button0),
	.button1(button1),
	.clk(clk),
	.clk_dac(clk_dac),
	.data_out(data_out),
	.rst(rst)
);
initial                                                
begin   		
clk<=0;  
rst<=1;
button0<=1;     
button1<=1;                                        
                      
#200 rst <= 0; // start 4ASK
#100 rst <= 1;

#100 button0 <= 0;
#100 button0 <= 1;

#100 button1 <= 0;
#100 button1 <= 1;

#1000
                                                                                                  
$display("Running testbench");                       
end                                                    
always #10 clk <= ~clk;                                                 
               
                                                    
endmodule

